#!/usr/bin/env bash

##
# az and jq command are must

[[ -n $DEBUG ]] && set -x

set -eou pipefail
IFS=$'\n\t'

SELF_CMD="$0"
AZX="/usr/local/bin/azx"

usage() {
  cat <<"EOF"
USAGE:
  azx                       : list the contexts
  azx <NAME>                : switch to context <NAME>
  azx -c, --current         : show the current context name

  azx -h,--help             : show this message
EOF
}

exit_err() {
   echo >&2 "${1}"
   exit 1
}

current_context() {
  $AZ account show | $JQ -r ".name"
}

get_contexts() {
  $AZ account list | $JQ -r ".[].name" | sort -n
}

list_contexts() {
  set -u pipefail
  local cur ctx_list
  cur="$(current_context)" || exit_err "error getting current context"
  ctx_list=$(get_contexts) || exit_err "error getting context list"

  local yellow darkbg normal
  yellow=$(tput setaf 3 || true)
  darkbg=$(tput setab 0 || true)
  normal=$(tput sgr0 || true)

  local cur_ctx_fg cur_ctx_bg
  cur_ctx_fg=${AZX_CURRENT_FGCOLOR:-$yellow}
  cur_ctx_bg=${AZX_CURRENT_BGCOLOR:-$darkbg}

  for c in $ctx_list; do
  if [[ -n "${_AZX_FORCE_COLOR:-}" || \
       -t 1 && -z "${NO_COLOR:-}" ]]; then
    # colored output mode
    if [[ "${c}" = "${cur}" ]]; then
      echo "${cur_ctx_bg}${cur_ctx_fg}${c}${normal}"
    else
      echo "${c}"
    fi
  else
    echo "${c}"
  fi
  done
}

set_context() {
  local prev
  prev="$(current_context)" || exit_err "error getting current context"

  switch_context "${1}"
}

switch_context() {
  $AZ account set -s "${1}"
}

choose_context_interactive() {
  local choice
  choice="$(_AZX_FORCE_COLOR=1 \
    FZF_DEFAULT_COMMAND="${SELF_CMD}" \
    fzf --ansi || true)"
  if [[ -z "${choice}" ]]; then
    echo 2>&1 "error: you did not choose any of the options"
    exit 1
  else
    set_context "${choice}"
  fi
}

context_exists() {
  grep -q ^"${1}"\$ <($AZ account list | $JQ -r ".[].name" | sort -n)
}


main() {
  if hash az 2>/dev/null; then
    AZ=az
  elif hash az.exe 2>/dev/null; then
    AZ=az
  else
    echo >&2 "az is not installed"
    exit 1
  fi

  if hash jq 2> /dev/null; then
    JQ=jq
  else
    echo >&2 "jq is not installed"
    exit 1
  fi

  if [[ "$#" -eq 0 ]]; then
    if [[ -t 1 &&  -z "${AZX_IGNORE_FZF:-}" && "$(type fzf &>/dev/null; echo $?)" -eq 0 ]]; then
      choose_context_interactive
    else
      list_contexts
    fi
  elif [[ "$#" -gt 1 ]]; then
    echo "error: too many arguments" >&2
    usage
    exit 1
  elif [[ "$#" -eq 1 ]]; then
    if [[ "${1}" == '-c' || "${1}" == '--current' ]]; then
      $AZ account show | $JQ -r ".name"
    elif [[ "${1}" == '-h' || "${1}" == '--help' ]]; then
      usage
    elif [[ "${1}" =~ ^-(.*) ]]; then
      echo "error: unrecognized flag \"${1}\"" >&2
      usage
      exit 1
    else
      set_context "${1}"
    fi
  else
    usage
    exit 1
  fi
}



main "$@"